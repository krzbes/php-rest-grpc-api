<?php
# Generated by the protocol buffer compiler (roadrunner-server/grpc). DO NOT EDIT!
# source: author.proto

namespace Schema;

use Spiral\RoadRunner\GRPC;

interface AuthorServiceInterface extends GRPC\ServiceInterface
{
    // GRPC specific service name.
    public const NAME = "Schema.AuthorService";

    /**
    * @param GRPC\ContextInterface $ctx
    * @param GetAuthorRequest $in
    * @return GetAuthorResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function GetAuthor(GRPC\ContextInterface $ctx, GetAuthorRequest $in): GetAuthorResponse;

    /**
    * @param GRPC\ContextInterface $ctx
    * @param CreateAuthorRequest $in
    * @return DefaultAuthorResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function CreateAuthor(GRPC\ContextInterface $ctx, CreateAuthorRequest $in): DefaultAuthorResponse;

    /**
    * @param GRPC\ContextInterface $ctx
    * @param DeleteAuthorRequest $in
    * @return DefaultAuthorResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function DeleteAuthor(GRPC\ContextInterface $ctx, DeleteAuthorRequest $in): DefaultAuthorResponse;

    /**
    * @param GRPC\ContextInterface $ctx
    * @param UpdateAuthorRequest $in
    * @return DefaultAuthorResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function UpdateAuthor(GRPC\ContextInterface $ctx, UpdateAuthorRequest $in): DefaultAuthorResponse;

    /**
    * @param GRPC\ContextInterface $ctx
    * @param ListAuthorsRequest $in
    * @return GetAuthorResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function ListAuthors(GRPC\ContextInterface $ctx, ListAuthorsRequest $in): GetAuthorResponse;
}
